{"version":3,"sources":["components/Header.js","components/CardThread.js","components/FormThread.js","helpers/useCreateThread.js","components/Main.js","components/Progress.js","components/PageHome.js","components/PageNotFound.js","components/CardResponse.js","components/FormResponse.js","helpers/useCreateResponse.js","components/PageThread.js","components/App.js","serviceWorker.js","helpers/initializeApp.js","index.js"],"names":["Header","AppBar","color","position","Toolbar","Typography","component","Link","to","variant","useStyles","makeStyles","content","display","gridRowGap","spacing","CardThread","thread","classes","Card","id","CardContent","className","title","responseCount","updatedAt","toDate","toLocaleString","useStyle","actions","justifyContent","form","FormThread","useState","text","setText","setTitle","username","setUsername","loading","setLoading","a","now","firestore","Timestamp","threadRef","collection","doc","set","createdAt","responseRef","threadId","useCreateThread","createThread","onSubmit","event","preventDefault","TextField","disabled","fullWidth","onChange","target","value","placeholder","multiline","rows","rowsMax","Button","onClick","breakpoints","root","margin","maxWidth","values","md","padding","Main","children","Progress","CircularProgress","PageHome","query","orderBy","useCollectionData","idField","threads","map","key","PageNotFound","whiteSpace","wordBreak","CardResponse","index","response","dateText","FormResponse","update","FieldValue","increment","useCreateResponse","createResponse","PageThread","useParams","responses","App","theme","createMuiTheme","ThemeProvider","CssBaseline","exact","path","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.311124ef.chunk.js","sourcesContent":["// このコンポーネントはトップページに戻る為のナビゲーションの役割をします。\n\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Header = () => {\n  return (\n    <AppBar color={'default'} position={'sticky'}>\n      <Toolbar>\n        <Typography color={'inherit'} component={Link} to={'/'} variant={'h5'}>\n          {'Forum'}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header","import { Card, CardContent, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst CardThread = ({ thread }) => {\n  const classes = useStyles()\n\n  return (\n    <Card>\n      <Link to={`/threads/${thread.id}`}>\n        <CardContent className={classes.content}>\n          <Typography variant={'h6'}>\n            {`${thread.title} (${thread.responseCount})`}\n          </Typography>\n          <Typography variant={'caption'}>\n            {thread.updatedAt.toDate().toLocaleString()}\n          </Typography>\n        </CardContent>\n      </Link>\n    </Card>\n  )\n}\n\nconst useStyles = makeStyles(({ spacing }) => {\n  return { content: { display: 'grid', gridRowGap: spacing(1) } }\n})\n\nexport default CardThread","import { Button, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { useState } from 'react'\nimport { useCreateThread } from '../helpers/useCreateThread'\n\nconst FormThread = () => {\n  const classes = useStyle()\n\n  const [text, setText] = useState('')\n\n  const [title, setTitle] = useState('')\n\n  const [username, setUsername] = useState('')\n\n  const [createThread, loading] = useCreateThread()\n\n  const onClick = () => {\n    createThread({ text, title, username })\n    setText('')\n    setTitle('')\n    setUsername('')\n  }\n\n  return (\n    <form className={classes.form} onSubmit={(event) => event.preventDefault()}>\n      <TextField\n        disabled={loading}\n        fullWidth\n        onChange={(event) => setTitle(event.target.value)}\n        placeholder={'New thread'}\n        value={title}\n        variant={'outlined'}\n      />\n      {title && (\n        <TextField\n          disabled={loading}\n          fullWidth\n          multiline\n          onChange={(event) => setText(event.target.value)}\n          placeholder={'Content'}\n          rows={2}\n          rowsMax={8}\n          value={text}\n          variant={'outlined'}\n        />\n      )}\n      {title && (\n        <TextField\n          disabled={loading}\n          fullWidth\n          onChange={(event) => setUsername(event.target.value)}\n          placeholder={'Username (optional)'}\n          value={username}\n          variant={'outlined'}\n        />\n      )}\n      <div className={classes.actions}>\n        <Button\n          color={'primary'}\n          disabled={loading || !title || !text}\n          onClick={onClick}\n          variant={'contained'}\n        >\n          {'Create'}\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nconst useStyle = makeStyles(({ spacing }) => {\n  return {\n    actions: { display: 'grid', justifyContent: 'flex-end' },\n    form: { display: 'grid', gridRowGap: spacing(2) },\n  }\n})\n\nexport default FormThread","// ./src/helpers/useCreateThread.js\n\nimport { firestore } from 'firebase/app'\nimport { useState } from 'react'\n\nexport const useCreateThread = () => {\n  const [loading, setLoading] = useState(false)\n\n  const createResponse = async ({ text, title, username }) => {\n    if (loading) return\n\n    setLoading(true)\n\n    const now = firestore.Timestamp.now()\n\n    const threadRef = firestore().collection('threads').doc()\n\n    await threadRef.set({\n      createdAt: now,\n      updatedAt: now,\n      title,\n      responseCount: 1,\n    })\n\n    const responseRef = threadRef.collection('responses').doc()\n\n    await responseRef.set({\n      createdAt: now,\n      updatedAt: now,\n      threadId: threadRef.id,\n      username,\n      text,\n    })\n\n    setLoading(false)\n  }\n\n  return [createResponse, loading]\n}","// 全体に関わるスタイルの適用\n\nimport { makeStyles } from '@material-ui/styles'\nimport React from 'react'\n\nconst Main = ({ children }) => {\n  const classes = useStyles()\n\n  return <main className={classes.root}>{children}</main>\n}\n\nconst useStyles = makeStyles(({ breakpoints, spacing }) => {\n  return {\n    root: {\n      display: 'grid',\n      gridRowGap: spacing(2),\n      margin: 'auto',\n      maxWidth: breakpoints.values.md,\n      padding: spacing(2),\n    },\n  }\n})\n\nexport default Main\n","import { CircularProgress } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React from 'react'\n\nconst Progress = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  )\n}\n\nconst useStyles = makeStyles({\n  root: { display: 'grid', justifyContent: 'center' },\n})\n\nexport default Progress","import { firestore } from 'firebase/app'\nimport React from 'react'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\nimport CardThread from './CardThread'\nimport FormThread from './FormThread'\nimport Main from './Main'\nimport Progress from './Progress'\n\nconst PageHome = () => {\n  const query = firestore().collection('threads').orderBy('updatedAt', 'desc')\n\n  const [threads = [], loading] = useCollectionData(query, { idField: 'id' })\n\n  return (\n    <Main>\n      <h1>{'Home'}</h1>\n      <FormThread />\n      {threads.map((thread) => (\n        <CardThread key={thread.id} thread={thread} />\n      ))}\n      {loading && <Progress />}\n    </Main>\n  )\n}\n\nexport default PageHome","import React from 'react'\nimport Main from './Main'\n\nconst PageNotFound = () => {\n  return (\n    <Main>\n      <h1>{'404'}</h1>\n    </Main>\n  )\n}\n\nexport default PageNotFound\n","import { Card, CardContent, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React from 'react'\n\nconst CardResponse = ({ index, response }) => {\n  const classes = useStyles()\n\n  const dateText = response.createdAt.toDate().toLocaleString()\n\n  return (\n    <Card>\n      <CardContent className={classes.root}>\n        <Typography>\n          {`${index} [${response.username || 'Unknown'}] ${dateText}`}\n        </Typography>\n        <Typography className={classes.text}>{response.text}</Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst useStyles = makeStyles(({ spacing }) => {\n  return {\n    root: { display: 'grid', gridRowGap: spacing(1) },\n    text: { whiteSpace: 'pre-wrap', wordBreak: 'break-word' },\n  }\n})\n\nexport default CardResponse","import { Button, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { useState } from 'react'\nimport { useCreateResponse } from '../helpers/useCreateResponse'\n\nconst FormResponse = ({ threadId }) => {\n  const classes = useStyle()\n\n  const [text, setText] = useState('')\n\n  const [username, setUsername] = useState('')\n\n  const [createResponse, loading] = useCreateResponse()\n\n  const onClick = () => {\n    createResponse({ text, threadId, username })\n    setText('')\n    setUsername('')\n  }\n\n  return (\n    <form className={classes.form} onSubmit={(event) => event.preventDefault()}>\n      <TextField\n        disabled={loading}\n        fullWidth\n        multiline\n        onChange={(event) => setText(event.target.value)}\n        placeholder={'New response'}\n        rows={2}\n        rowsMax={8}\n        value={text}\n        variant={'outlined'}\n      />\n      {text && (\n        <TextField\n          disabled={loading}\n          fullWidth\n          onChange={(event) => setUsername(event.target.value)}\n          placeholder={'Username (Optional)'}\n          value={username}\n          variant={'outlined'}\n        />\n      )}\n      <div className={classes.actions}>\n        <Button\n          color={'primary'}\n          disabled={loading || !text}\n          onClick={onClick}\n          variant={'contained'}\n        >\n          {'Create'}\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nconst useStyle = makeStyles(({ spacing }) => {\n  return {\n    actions: { display: 'grid', justifyContent: 'flex-end' },\n    form: { display: 'grid', gridRowGap: spacing(2) },\n  }\n})\n\nexport default FormResponse","// ./src/helpers/useCreateThread.js\n\nimport { firestore } from 'firebase/app'\nimport { useState } from 'react'\n\nexport const useCreateResponse = () => {\n  const [loading, setLoading] = useState(false)\n\n  const createResponse = async ({ text, threadId, username }) => {\n    if (loading) return\n\n    setLoading(true)\n\n    const now = firestore.Timestamp.now()\n\n    const threadRef = firestore().collection('threads').doc(threadId)\n\n    await threadRef.update({\n      responseCount: firestore.FieldValue.increment(1),\n      updatedAt: now,\n    })\n\n    const responseRef = threadRef.collection('responses').doc()\n\n    await responseRef.set({\n      createdAt: now,\n      updatedAt: now,\n      text,\n      threadId,\n      username,\n    })\n\n    setLoading(false)\n  }\n\n  return [createResponse, loading]\n}","import { firestore } from 'firebase/app'\nimport React from 'react'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\nimport { useParams } from 'react-router-dom'\nimport CardResponse from './CardResponse'\nimport FormResponse from './FormResponse'\nimport Main from './Main'\nimport Progress from './Progress'\n\nconst PageThread = () => {\n  const { threadId } = useParams()\n\n  const query = firestore()\n    .collection('threads')\n    .doc(threadId)\n    .collection('responses')\n    .orderBy('createdAt', 'asc')\n\n  const [responses = [], loading] = useCollectionData(query, { idField: 'id' })\n\n  return (\n    <Main>\n      <h1>{'Thread'}</h1>\n      {responses.map((response, index) => (\n        <CardResponse key={response.id} index={index} response={response} />\n      ))}\n      {loading && <Progress />}\n      <FormResponse threadId={threadId} />\n    </Main>\n  )\n}\n\nexport default PageThread","import { createMuiTheme, CssBaseline } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/styles'\nimport React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './Header'\nimport PageHome from './PageHome'\nimport PageNotFound from './PageNotFound'\nimport PageThread from './PageThread'\n\n\nconst App = () => {\n  const theme = createMuiTheme()\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter>\n        <Header />\n        <Switch>\n\n          <Route exact path={'/'}>\n            <PageHome />\n          </Route>\n\n          <Route exact path={'/threads/:threadId'}>\n            <PageThread />\n          </Route>\n\n          <Route path={'*'}>\n            <PageNotFound />\n          </Route>\n          \n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { firestore, initializeApp } from 'firebase/app'\nimport 'firebase/firestore'\n\ninitializeApp({\n  apiKey: \"AIzaSyCDfF9YSSLpiMQgugTZSMnUI-Dkb0E5QMM\",\n  authDomain: \"bulletinboard-39bae.firebaseapp.com\",\n  databaseURL: \"https://bulletinboard-39bae.firebaseio.com\",\n  projectId: \"bulletinboard-39bae\",\n  storageBucket: \"bulletinboard-39bae.appspot.com\",\n  messagingSenderId: \"206500042925\",\n  appId: \"1:206500042925:web:64417cb4932ee6172c4e24\",\n  measurementId: \"G-615Q1BZD43\"\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nimport './helpers/initializeApp.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n\nif (module.hot) {\n  module.hot.accept()\n}"],"sourceRoot":""}