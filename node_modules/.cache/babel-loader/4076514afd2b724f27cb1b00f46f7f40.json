{"ast":null,"code":"import _slicedToArray from\"/Users/kosugeyuki/Desktop/techpit-forum/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,TextField}from'@material-ui/core';import{makeStyles}from'@material-ui/styles';import React,{useState}from'react';import{useCreateThread}from'../helpers/useCreateThread';var FormThread=function FormThread(){var classes=useStyle();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),username=_useState6[0],setUsername=_useState6[1];var _useCreateThread=useCreateThread(),_useCreateThread2=_slicedToArray(_useCreateThread,2),createThread=_useCreateThread2[0],loading=_useCreateThread2[1];var onClick=function onClick(){createThread({text:text,title:title,username:username});setText('');setTitle('');setUsername('');};return/*#__PURE__*/React.createElement(\"form\",{className:classes.form,onSubmit:function onSubmit(event){return event.preventDefault();}},/*#__PURE__*/React.createElement(TextField,{disabled:loading,fullWidth:true,onChange:function onChange(event){return setTitle(event.target.value);},placeholder:'New thread',value:title,variant:'outlined'}),title&&/*#__PURE__*/React.createElement(TextField,{disabled:loading,fullWidth:true,multiline:true,onChange:function onChange(event){return setText(event.target.value);},placeholder:'Content',rows:2,rowsMax:8,value:text,variant:'outlined'}),title&&/*#__PURE__*/React.createElement(TextField,{disabled:loading,fullWidth:true,onChange:function onChange(event){return setUsername(event.target.value);},placeholder:'Username (optional)',value:username,variant:'outlined'}),/*#__PURE__*/React.createElement(\"div\",{className:classes.actions},/*#__PURE__*/React.createElement(Button,{color:'primary',disabled:loading||!title||!text,onClick:onClick,variant:'contained'},'Create')));};var useStyle=makeStyles(function(_ref){var spacing=_ref.spacing;return{actions:{display:'grid',justifyContent:'flex-end'},form:{display:'grid',gridRowGap:spacing(2)}};});export default FormThread;","map":{"version":3,"sources":["/Users/kosugeyuki/Desktop/techpit-forum/src/components/FormThread.js"],"names":["Button","TextField","makeStyles","React","useState","useCreateThread","FormThread","classes","useStyle","text","setText","title","setTitle","username","setUsername","createThread","loading","onClick","form","event","preventDefault","target","value","actions","spacing","display","justifyContent","gridRowGap"],"mappings":"0HAAA,OAASA,MAAT,CAAiBC,SAAjB,KAAkC,mBAAlC,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,eAAT,KAAgC,4BAAhC,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,OAAO,CAAGC,QAAQ,EAAxB,CADuB,cAGCJ,QAAQ,CAAC,EAAD,CAHT,wCAGhBK,IAHgB,eAGVC,OAHU,8BAKGN,QAAQ,CAAC,EAAD,CALX,yCAKhBO,KALgB,eAKTC,QALS,8BAOSR,QAAQ,CAAC,EAAD,CAPjB,yCAOhBS,QAPgB,eAONC,WAPM,oCASST,eAAe,EATxB,sDAShBU,YATgB,sBASFC,OATE,sBAWvB,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBF,YAAY,CAAC,CAAEN,IAAI,CAAJA,IAAF,CAAQE,KAAK,CAALA,KAAR,CAAeE,QAAQ,CAARA,QAAf,CAAD,CAAZ,CACAH,OAAO,CAAC,EAAD,CAAP,CACAE,QAAQ,CAAC,EAAD,CAAR,CACAE,WAAW,CAAC,EAAD,CAAX,CACD,CALD,CAOA,mBACE,4BAAM,SAAS,CAAEP,OAAO,CAACW,IAAzB,CAA+B,QAAQ,CAAE,kBAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,cAAN,EAAX,EAAzC,eACE,oBAAC,SAAD,EACE,QAAQ,CAAEJ,OADZ,CAEE,SAAS,KAFX,CAGE,QAAQ,CAAE,kBAACG,KAAD,QAAWP,CAAAA,QAAQ,CAACO,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAnB,EAHZ,CAIE,WAAW,CAAE,YAJf,CAKE,KAAK,CAAEX,KALT,CAME,OAAO,CAAE,UANX,EADF,CASGA,KAAK,eACJ,oBAAC,SAAD,EACE,QAAQ,CAAEK,OADZ,CAEE,SAAS,KAFX,CAGE,SAAS,KAHX,CAIE,QAAQ,CAAE,kBAACG,KAAD,QAAWT,CAAAA,OAAO,CAACS,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAlB,EAJZ,CAKE,WAAW,CAAE,SALf,CAME,IAAI,CAAE,CANR,CAOE,OAAO,CAAE,CAPX,CAQE,KAAK,CAAEb,IART,CASE,OAAO,CAAE,UATX,EAVJ,CAsBGE,KAAK,eACJ,oBAAC,SAAD,EACE,QAAQ,CAAEK,OADZ,CAEE,SAAS,KAFX,CAGE,QAAQ,CAAE,kBAACG,KAAD,QAAWL,CAAAA,WAAW,CAACK,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAtB,EAHZ,CAIE,WAAW,CAAE,qBAJf,CAKE,KAAK,CAAET,QALT,CAME,OAAO,CAAE,UANX,EAvBJ,cAgCE,2BAAK,SAAS,CAAEN,OAAO,CAACgB,OAAxB,eACE,oBAAC,MAAD,EACE,KAAK,CAAE,SADT,CAEE,QAAQ,CAAEP,OAAO,EAAI,CAACL,KAAZ,EAAqB,CAACF,IAFlC,CAGE,OAAO,CAAEQ,OAHX,CAIE,OAAO,CAAE,WAJX,EAMG,QANH,CADF,CAhCF,CADF,CA6CD,CA/DD,CAiEA,GAAMT,CAAAA,QAAQ,CAAGN,UAAU,CAAC,cAAiB,IAAdsB,CAAAA,OAAc,MAAdA,OAAc,CAC3C,MAAO,CACLD,OAAO,CAAE,CAAEE,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,UAAnC,CADJ,CAELR,IAAI,CAAE,CAAEO,OAAO,CAAE,MAAX,CAAmBE,UAAU,CAAEH,OAAO,CAAC,CAAD,CAAtC,CAFD,CAAP,CAID,CAL0B,CAA3B,CAOA,cAAelB,CAAAA,UAAf","sourcesContent":["import { Button, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { useState } from 'react'\nimport { useCreateThread } from '../helpers/useCreateThread'\n\nconst FormThread = () => {\n  const classes = useStyle()\n\n  const [text, setText] = useState('')\n\n  const [title, setTitle] = useState('')\n\n  const [username, setUsername] = useState('')\n\n  const [createThread, loading] = useCreateThread()\n\n  const onClick = () => {\n    createThread({ text, title, username })\n    setText('')\n    setTitle('')\n    setUsername('')\n  }\n\n  return (\n    <form className={classes.form} onSubmit={(event) => event.preventDefault()}>\n      <TextField\n        disabled={loading}\n        fullWidth\n        onChange={(event) => setTitle(event.target.value)}\n        placeholder={'New thread'}\n        value={title}\n        variant={'outlined'}\n      />\n      {title && (\n        <TextField\n          disabled={loading}\n          fullWidth\n          multiline\n          onChange={(event) => setText(event.target.value)}\n          placeholder={'Content'}\n          rows={2}\n          rowsMax={8}\n          value={text}\n          variant={'outlined'}\n        />\n      )}\n      {title && (\n        <TextField\n          disabled={loading}\n          fullWidth\n          onChange={(event) => setUsername(event.target.value)}\n          placeholder={'Username (optional)'}\n          value={username}\n          variant={'outlined'}\n        />\n      )}\n      <div className={classes.actions}>\n        <Button\n          color={'primary'}\n          disabled={loading || !title || !text}\n          onClick={onClick}\n          variant={'contained'}\n        >\n          {'Create'}\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nconst useStyle = makeStyles(({ spacing }) => {\n  return {\n    actions: { display: 'grid', justifyContent: 'flex-end' },\n    form: { display: 'grid', gridRowGap: spacing(2) },\n  }\n})\n\nexport default FormThread"]},"metadata":{},"sourceType":"module"}