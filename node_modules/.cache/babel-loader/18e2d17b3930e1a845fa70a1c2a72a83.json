{"ast":null,"code":"// ./src/helpers/useCreateThread.js\nimport { firestore } from 'firebase/app';\nimport { useState } from 'react';\nexport const useCreateResponse = () => {\n  const [loading, setLoading] = useState(false);\n\n  const createResponse = async ({\n    text,\n    threadId,\n    username\n  }) => {\n    if (loading) return;\n    setLoading(true);\n    const now = firestore.Timestamp.now();\n    const threadRef = firestore().collection('threads').doc(threadId);\n    await threadRef.update({\n      responseCount: firestore.FieldValue.increment(1),\n      updatedAt: now\n    });\n    const responseRef = threadRef.collection('responses').doc();\n    await responseRef.set({\n      createdAt: now,\n      updatedAt: now,\n      text,\n      threadId,\n      username\n    });\n    setLoading(false);\n  };\n\n  return [createResponse, loading];\n};","map":{"version":3,"sources":["/Users/kosugeyuki/Desktop/techpit-forum/src/helpers/useCreateResponse.js"],"names":["firestore","useState","useCreateResponse","loading","setLoading","createResponse","text","threadId","username","now","Timestamp","threadRef","collection","doc","update","responseCount","FieldValue","increment","updatedAt","responseRef","set","createdAt"],"mappings":"AAAA;AAEA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMI,cAAc,GAAG,OAAO;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAP,KAAwC;AAC7D,QAAIL,OAAJ,EAAa;AAEbC,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMK,GAAG,GAAGT,SAAS,CAACU,SAAV,CAAoBD,GAApB,EAAZ;AAEA,UAAME,SAAS,GAAGX,SAAS,GAAGY,UAAZ,CAAuB,SAAvB,EAAkCC,GAAlC,CAAsCN,QAAtC,CAAlB;AAEA,UAAMI,SAAS,CAACG,MAAV,CAAiB;AACrBC,MAAAA,aAAa,EAAEf,SAAS,CAACgB,UAAV,CAAqBC,SAArB,CAA+B,CAA/B,CADM;AAErBC,MAAAA,SAAS,EAAET;AAFU,KAAjB,CAAN;AAKA,UAAMU,WAAW,GAAGR,SAAS,CAACC,UAAV,CAAqB,WAArB,EAAkCC,GAAlC,EAApB;AAEA,UAAMM,WAAW,CAACC,GAAZ,CAAgB;AACpBC,MAAAA,SAAS,EAAEZ,GADS;AAEpBS,MAAAA,SAAS,EAAET,GAFS;AAGpBH,MAAAA,IAHoB;AAIpBC,MAAAA,QAJoB;AAKpBC,MAAAA;AALoB,KAAhB,CAAN;AAQAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAzBD;;AA2BA,SAAO,CAACC,cAAD,EAAiBF,OAAjB,CAAP;AACD,CA/BM","sourcesContent":["// ./src/helpers/useCreateThread.js\n\nimport { firestore } from 'firebase/app'\nimport { useState } from 'react'\n\nexport const useCreateResponse = () => {\n  const [loading, setLoading] = useState(false)\n\n  const createResponse = async ({ text, threadId, username }) => {\n    if (loading) return\n\n    setLoading(true)\n\n    const now = firestore.Timestamp.now()\n\n    const threadRef = firestore().collection('threads').doc(threadId)\n\n    await threadRef.update({\n      responseCount: firestore.FieldValue.increment(1),\n      updatedAt: now,\n    })\n\n    const responseRef = threadRef.collection('responses').doc()\n\n    await responseRef.set({\n      createdAt: now,\n      updatedAt: now,\n      text,\n      threadId,\n      username,\n    })\n\n    setLoading(false)\n  }\n\n  return [createResponse, loading]\n}"]},"metadata":{},"sourceType":"module"}