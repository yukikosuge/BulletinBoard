{"ast":null,"code":"import _slicedToArray from\"/Users/kosugeyuki/Desktop/techpit-forum/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,TextField}from'@material-ui/core';import{makeStyles}from'@material-ui/styles';import React,{useState}from'react';import{useCreateResponse}from'../helpers/useCreateResponse';var FormResponse=function FormResponse(_ref){var threadId=_ref.threadId;var classes=useStyle();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),username=_useState4[0],setUsername=_useState4[1];var _useCreateResponse=useCreateResponse(),_useCreateResponse2=_slicedToArray(_useCreateResponse,2),createResponse=_useCreateResponse2[0],loading=_useCreateResponse2[1];var onClick=function onClick(){createResponse({text:text,threadId:threadId,username:username});setText('');setUsername('');};return/*#__PURE__*/React.createElement(\"form\",{className:classes.form,onSubmit:function onSubmit(event){return event.preventDefault();}},/*#__PURE__*/React.createElement(TextField,{disabled:loading,fullWidth:true,multiline:true,onChange:function onChange(event){return setText(event.target.value);},placeholder:'New response',rows:2,rowsMax:8,value:text,variant:'outlined'}),text&&/*#__PURE__*/React.createElement(TextField,{disabled:loading,fullWidth:true,onChange:function onChange(event){return setUsername(event.target.value);},placeholder:'Username (Optional)',value:username,variant:'outlined'}),/*#__PURE__*/React.createElement(\"div\",{className:classes.actions},/*#__PURE__*/React.createElement(Button,{color:'primary',disabled:loading||!text,onClick:onClick,variant:'contained'},'Create')));};var useStyle=makeStyles(function(_ref2){var spacing=_ref2.spacing;return{actions:{display:'grid',justifyContent:'flex-end'},form:{display:'grid',gridRowGap:spacing(2)}};});export default FormResponse;","map":{"version":3,"sources":["/Users/kosugeyuki/Desktop/techpit-forum/src/components/FormResponse.js"],"names":["Button","TextField","makeStyles","React","useState","useCreateResponse","FormResponse","threadId","classes","useStyle","text","setText","username","setUsername","createResponse","loading","onClick","form","event","preventDefault","target","value","actions","spacing","display","justifyContent","gridRowGap"],"mappings":"0HAAA,OAASA,MAAT,CAAiBC,SAAjB,KAAkC,mBAAlC,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,iBAAT,KAAkC,8BAAlC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACrC,GAAMC,CAAAA,OAAO,CAAGC,QAAQ,EAAxB,CADqC,cAGbL,QAAQ,CAAC,EAAD,CAHK,wCAG9BM,IAH8B,eAGxBC,OAHwB,8BAKLP,QAAQ,CAAC,EAAD,CALH,yCAK9BQ,QAL8B,eAKpBC,WALoB,sCAOHR,iBAAiB,EAPd,0DAO9BS,cAP8B,wBAOdC,OAPc,wBASrC,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBF,cAAc,CAAC,CAAEJ,IAAI,CAAJA,IAAF,CAAQH,QAAQ,CAARA,QAAR,CAAkBK,QAAQ,CAARA,QAAlB,CAAD,CAAd,CACAD,OAAO,CAAC,EAAD,CAAP,CACAE,WAAW,CAAC,EAAD,CAAX,CACD,CAJD,CAMA,mBACE,4BAAM,SAAS,CAAEL,OAAO,CAACS,IAAzB,CAA+B,QAAQ,CAAE,kBAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,cAAN,EAAX,EAAzC,eACE,oBAAC,SAAD,EACE,QAAQ,CAAEJ,OADZ,CAEE,SAAS,KAFX,CAGE,SAAS,KAHX,CAIE,QAAQ,CAAE,kBAACG,KAAD,QAAWP,CAAAA,OAAO,CAACO,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAlB,EAJZ,CAKE,WAAW,CAAE,cALf,CAME,IAAI,CAAE,CANR,CAOE,OAAO,CAAE,CAPX,CAQE,KAAK,CAAEX,IART,CASE,OAAO,CAAE,UATX,EADF,CAYGA,IAAI,eACH,oBAAC,SAAD,EACE,QAAQ,CAAEK,OADZ,CAEE,SAAS,KAFX,CAGE,QAAQ,CAAE,kBAACG,KAAD,QAAWL,CAAAA,WAAW,CAACK,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAtB,EAHZ,CAIE,WAAW,CAAE,qBAJf,CAKE,KAAK,CAAET,QALT,CAME,OAAO,CAAE,UANX,EAbJ,cAsBE,2BAAK,SAAS,CAAEJ,OAAO,CAACc,OAAxB,eACE,oBAAC,MAAD,EACE,KAAK,CAAE,SADT,CAEE,QAAQ,CAAEP,OAAO,EAAI,CAACL,IAFxB,CAGE,OAAO,CAAEM,OAHX,CAIE,OAAO,CAAE,WAJX,EAMG,QANH,CADF,CAtBF,CADF,CAmCD,CAlDD,CAoDA,GAAMP,CAAAA,QAAQ,CAAGP,UAAU,CAAC,eAAiB,IAAdqB,CAAAA,OAAc,OAAdA,OAAc,CAC3C,MAAO,CACLD,OAAO,CAAE,CAAEE,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,UAAnC,CADJ,CAELR,IAAI,CAAE,CAAEO,OAAO,CAAE,MAAX,CAAmBE,UAAU,CAAEH,OAAO,CAAC,CAAD,CAAtC,CAFD,CAAP,CAID,CAL0B,CAA3B,CAOA,cAAejB,CAAAA,YAAf","sourcesContent":["import { Button, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { useState } from 'react'\nimport { useCreateResponse } from '../helpers/useCreateResponse'\n\nconst FormResponse = ({ threadId }) => {\n  const classes = useStyle()\n\n  const [text, setText] = useState('')\n\n  const [username, setUsername] = useState('')\n\n  const [createResponse, loading] = useCreateResponse()\n\n  const onClick = () => {\n    createResponse({ text, threadId, username })\n    setText('')\n    setUsername('')\n  }\n\n  return (\n    <form className={classes.form} onSubmit={(event) => event.preventDefault()}>\n      <TextField\n        disabled={loading}\n        fullWidth\n        multiline\n        onChange={(event) => setText(event.target.value)}\n        placeholder={'New response'}\n        rows={2}\n        rowsMax={8}\n        value={text}\n        variant={'outlined'}\n      />\n      {text && (\n        <TextField\n          disabled={loading}\n          fullWidth\n          onChange={(event) => setUsername(event.target.value)}\n          placeholder={'Username (Optional)'}\n          value={username}\n          variant={'outlined'}\n        />\n      )}\n      <div className={classes.actions}>\n        <Button\n          color={'primary'}\n          disabled={loading || !text}\n          onClick={onClick}\n          variant={'contained'}\n        >\n          {'Create'}\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nconst useStyle = makeStyles(({ spacing }) => {\n  return {\n    actions: { display: 'grid', justifyContent: 'flex-end' },\n    form: { display: 'grid', gridRowGap: spacing(2) },\n  }\n})\n\nexport default FormResponse"]},"metadata":{},"sourceType":"module"}