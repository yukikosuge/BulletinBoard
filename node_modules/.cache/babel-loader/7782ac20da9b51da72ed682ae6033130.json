{"ast":null,"code":"var _jsxFileName = \"/Users/kosugeyuki/Desktop/techpit-forum/src/components/FormThread.js\";\nimport { Button, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useState } from 'react';\nimport { useCreateThread } from '../helpers/useCreateThread';\n\nconst FormThread = () => {\n  const classes = useStyle();\n  const [text, setText] = useState('');\n  const [title, setTitle] = useState('');\n  const [username, setUsername] = useState('');\n  const [createThread, loading] = useCreateThread();\n\n  const onClick = () => {\n    createThread({\n      text,\n      title,\n      username\n    });\n    setText('');\n    setTitle('');\n    setUsername('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: event => event.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: loading,\n    fullWidth: true,\n    onChange: event => setTitle(event.target.value),\n    placeholder: 'New thread',\n    value: title,\n    variant: 'outlined',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), title && /*#__PURE__*/React.createElement(TextField, {\n    disabled: loading,\n    fullWidth: true,\n    multiline: true,\n    onChange: event => setText(event.target.value),\n    placeholder: 'Content',\n    rows: 2,\n    rowsMax: 8,\n    value: text,\n    variant: 'outlined',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), title && /*#__PURE__*/React.createElement(TextField, {\n    disabled: loading,\n    fullWidth: true,\n    onChange: event => setUsername(event.target.value),\n    placeholder: 'Username (optional)',\n    value: username,\n    variant: 'outlined',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: 'primary',\n    disabled: loading || !title || !text,\n    onClick: onClick,\n    variant: 'contained',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, 'Create')));\n};\n\nconst useStyle = makeStyles(({\n  spacing\n}) => {\n  return {\n    actions: {\n      display: 'grid',\n      justifyContent: 'flex-end'\n    },\n    form: {\n      display: 'grid',\n      gridRowGap: spacing(2)\n    }\n  };\n});\nexport default FormThread;","map":{"version":3,"sources":["/Users/kosugeyuki/Desktop/techpit-forum/src/components/FormThread.js"],"names":["Button","TextField","makeStyles","React","useState","useCreateThread","FormThread","classes","useStyle","text","setText","title","setTitle","username","setUsername","createThread","loading","onClick","form","event","preventDefault","target","value","actions","spacing","display","justifyContent","gridRowGap"],"mappings":"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","sourcesContent":["import { Button, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport React, { useState } from 'react'\nimport { useCreateThread } from '../helpers/useCreateThread'\n\nconst FormThread = () => {\n  const classes = useStyle()\n\n  const [text, setText] = useState('')\n\n  const [title, setTitle] = useState('')\n\n  const [username, setUsername] = useState('')\n\n  const [createThread, loading] = useCreateThread()\n\n  const onClick = () => {\n    createThread({ text, title, username })\n    setText('')\n    setTitle('')\n    setUsername('')\n  }\n\n  return (\n    <form className={classes.form} onSubmit={(event) => event.preventDefault()}>\n      <TextField\n        disabled={loading}\n        fullWidth\n        onChange={(event) => setTitle(event.target.value)}\n        placeholder={'New thread'}\n        value={title}\n        variant={'outlined'}\n      />\n      {title && (\n        <TextField\n          disabled={loading}\n          fullWidth\n          multiline\n          onChange={(event) => setText(event.target.value)}\n          placeholder={'Content'}\n          rows={2}\n          rowsMax={8}\n          value={text}\n          variant={'outlined'}\n        />\n      )}\n      {title && (\n        <TextField\n          disabled={loading}\n          fullWidth\n          onChange={(event) => setUsername(event.target.value)}\n          placeholder={'Username (optional)'}\n          value={username}\n          variant={'outlined'}\n        />\n      )}\n      <div className={classes.actions}>\n        <Button\n          color={'primary'}\n          disabled={loading || !title || !text}\n          onClick={onClick}\n          variant={'contained'}\n        >\n          {'Create'}\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nconst useStyle = makeStyles(({ spacing }) => {\n  return {\n    actions: { display: 'grid', justifyContent: 'flex-end' },\n    form: { display: 'grid', gridRowGap: spacing(2) },\n  }\n})\n\nexport default FormThread"]},"metadata":{},"sourceType":"module"}